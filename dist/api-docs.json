{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Coppia.co API Documentation",
        "description": "API Documentation for Coppia.co API calls",
        "termsOfService": "http://swagger.io/terms/"
    },
    "basePath": "/",
    "tags" : [
        {
            "name": "Ideas", 
            "description": "API for Ideas section of site"
        },
        {
            "name": "Interviews", 
            "description": "API for Interview section of site"
        }
    ],
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/api/v1/ideas/": {
            "get": {
                "tags": ["Ideas"],
                "description": "Returns a list of idea object",
                "operationId": "find",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success response when returning a list of ideas",
                        "schema": {
                            "$ref": "#/definitions/idea"
                        }
                    }
                }
            },
            "post":{
                "tags": ["Ideas"],
                "description": "Creates a new idea object",
                "operationId": "create",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "title",
                        "in": "body",
                        "description": "Title for the Idea",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "goal",
                        "in": "body",
                        "description": "Goal for the Idea",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "body",
                        "description": "Status for the Idea",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "create_user",
                        "in": "body",
                        "description": "id for the logged in user",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response When creating a new idea object",
                        "schema": {
                            "$ref": "#/definitions/create_idea"
                        }
                    }
                }
            }
        },
        "/api/v1/ideas/{idea_id}": {
            "get":{
                "tags": ["Ideas"],
                "description": "Returns a single idea object",
                "operationId": "findById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "idea_id",
                        "in": "path",
                        "description": "id of the Idea to return from the database",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response when returning a single idea object",
                        "schema": {
                            "$ref": "#/definitions/idea"
                        }
                    }
                }
            },
            "put":{
                "tags": ["Ideas"],
                "description": "Returns a success message for the updated idea object",
                "operationId": "updateById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "idea_id",
                        "in": "path",
                        "description": "id of the Idea to update",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "title",
                        "in": "body",
                        "description": "Title for the Idea",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "goal",
                        "in": "body",
                        "description": "Goal for the Idea",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "body",
                        "description": "Status for the Idea",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "update_user",
                        "in": "body",
                        "description": "id for the logged in user",
                        "required": true,
                        "optional" : false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response when calling to update an Idea",
                        "schema": {
                            "$ref": "#/definitions/update_idea"
                        }
                    }
                }
            },
            "delete":{
                "tags":["Ideas"],
                "description":"Deletes an idea object from the database. This will also remove the idea_snippet association as well (if any)",
                "operationId":"delete",
                "produces": [
                    "application/json"
                ],
                "parameters":[
                    {
                        "name": "idea_id",
                        "in": "path",
                        "description": "id of the Idea to delete",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response for the delete operation",
                        "schema":{
                            "$ref":"#/definitions/delete_idea"
                        }
                    }
                }
            }
        },
        "/api/v1/ideas/idea_snippet/": {
            "post":{
                "tags": ["Ideas"],
                "description": "Creates a new idea_snippet association",
                "operationId": "create",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "idea_id",
                        "in": "body",
                        "description": "id for the idea to associate",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "snippet_id",
                        "in": "body",
                        "description": "id for the snippet to associate",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "When creating a new idea_snippet association, the id for the newly created idea_snippet will be returned",
                        "schema": {
                            "$ref": "#/definitions/create_idea_snippet"
                        }
                    }
                }
            }
        },
        "/api/v1/interviews/": {
            "get": {
                "tags": ["Interviews"],
                "description": "Return list of Interviews",
                "operationId": "find",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Interview object returned in list",
                        "schema": {
                            "$ref": "#/definitions/interview"
                        }
                    }
                }
            },
            "post":{
                "tags": ["Interviews"],
                "description": "Creates a new Inteview",
                "operationId": "create",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "title",
                        "in": "body",
                        "description": "Title for the Interview",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "notes",
                        "in": "body",
                        "description": "Notes for the Interview",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "create_user",
                        "in": "body",
                        "description": "User Id for the logged in user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "When creating a new interview, the id for the newly created Interview will be returned",
                        "schema": {
                            "$ref": "#/definitions/create_interview"
                        }
                    }
                }
            }
        },
        "/api/v1/interviews/{interview_id}": {
            "get":{
                "tags": ["Interviews"],
                "description": "Returns a single Interview object",
                "operationId": "findById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "interview_id",
                        "in": "path",
                        "description": "id for the Interview user wants to get",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns single Interview object",
                        "schema": {
                            "$ref": "#/definitions/interview"
                        }
                    }
                }
            },
            "put":{
                "tags": ["Interviews"],
                "description": "Returns a success message with count of interviews updates",
                "operationId": "updateById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "interview_id",
                        "in": "path",
                        "description": "id for the Interview to update",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "title",
                        "in": "body",
                        "description": "title for the Interview",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "notes",
                        "in": "body",
                        "description": "notes for the Interview",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "update_user",
                        "in": "body",
                        "description": "id for the logged in user",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response when calling to update an Interview",
                        "schema": {
                            "$ref": "#/definitions/update_interview"
                        }
                    }
                }
            },
            "delete":{
                "tags":["Interviews"],
                "description":"Deletes an interview from the database",
                "operationId":"delete",
                "produces": [
                    "application/json"
                ],
                "parameters":[
                    {
                        "name": "interview_id",
                        "in": "path",
                        "description": "interview_id for the Interview to be deleted from the database. This will remove the association in the inteview_customer table as well",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response for the deleted Interview",
                        "schema":{
                            "$ref":"#/definitions/delete_interview"
                        }
                    }
                }
            }
        },
         "/api/v1/interviews/interview_customer/": {
            "post":{
                "tags": ["Interviews"],
                "description": "Creates a new interview_customer association",
                "operationId": "create",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "interview_id",
                        "in": "body",
                        "description": "id for the interview to associate",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "customer_id",
                        "in": "body",
                        "description": "id for the customer to associate",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "When creating a new interview_customer association, the id for the newly created intervew_customer will be returned",
                        "schema": {
                            "$ref": "#/definitions/create_interview_customer"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "idea": {
            "properties": {
                "id": {
                    "required":true,
                    "optional" : false,
                    "type": "integer",
                    "example": "12"
                },
                "title": {
                    "required":true,
                    "optional" : false,
                    "type": "string",
                    "example": "Need to improve onboarding in order to increase activation"
                },
                "goal": {
                    "required":true,
                    "optional" : false,
                    "type": "string",
                    "example": "Increase activation rate at least by 20%"
                },
                "status": {
                    "required":true,
                    "optional" : false,
                    "type": "string",
                    "example": "UNTESTED"
                },
                "create_user": {
                    "required":true,
                    "optional" : false,
                    "type": "integer",
                    "example": "1"
                },
                "create_datetime": {
                    "required":true,
                    "optional" : false,
                    "type": "datetime",
                    "example": "2016-10-17T23:10:23.000Z"
                },
                "update_user": {
                    "required":true,
                    "optional" : false,
                    "type": "integer",
                    "example": "1"
                },
                "update_datetime": {
                    "required":true,
                    "optional" : false,
                    "type": "datetime",
                    "example": "2016-10-17T23:10:23.000Z"
                }
            }
        },
        "create_idea": {
            "properties": {
                "idea_id": {
                    "required": true,
                    "type" : "integer",
                    "example" : "13"
                }
            }
        },
        "update_idea": {
            "properties": {
                "idea_id": {
                    "required": true,
                    "type" : "integer",
                    "example" : "13"
                }
            }
        },
         "delete_idea": {
            "properties": {
                "idea_id": {
                    "required": true,
                    "type" : "integer",
                    "example" : "12"
                }
            }
        },
        "create_idea_snippet": {
            "properties": {
                "idea_snippet_id": {
                    "required": true,
                    "type" : "integer",
                    "example" : "4"
                }
            }
        },
        "400error" : {
            "properties": {
                "message": {
                    "type": "string",
                    "example" : "400 Bad Request"
                }
            }
        },
        "interview": {
            "properties": {
                "id": {
                    "required":true,
                    "type": "integer",
                    "example": "6"
                },
                "title": {
                    "required":true,
                    "type": "string",
                    "example": "Reporting Discovery w/Charlotte"
                },
                "notes": {
                    "required":true,
                    "type": "string",
                    "example": "Industrial distributor for padlocks. Padlocks are very custom items. Shackle lengths, master keys, a lot of customization that goes into ordering padlocks. Can you explain this keying to me? Using chat would help reduce the phone traffic. Those conversations are relatively quick. They have 5 people with the company. They all take turns answering calls and 3 people are on Pure Chat every day."
                },
                "create_user": {
                    "required":true,
                    "type": "integer",
                    "example": "1"
                },
                "create_datetime": {
                    "required":true,
                    "type": "datetime",
                    "example": "2016-10-17T23:10:23.000Z"
                },
                "update_user": {
                    "required":true,
                    "type": "integer",
                    "example": "1"
                },
                "update_datetime": {
                    "required":true,
                    "type": "datetime",
                    "example": "2016-10-17T23:10:23.000Z"
                }
            }
        },
        "create_interview": {
            "properties": {
                "interview_id": {
                    "required": true,
                    "type" : "integer",
                    "example" : "3"
                }
            }
        },
         "update_interview": {
            "properties": {
                "interview_id": {
                    "required": true,
                    "type" : "integer",
                    "example" : "8"
                }
            }
        },
         "delete_interview": {
            "properties": {
                "interview_id": {
                    "required": true,
                    "type" : "integer",
                    "example" : "6"
                }
            }
        },
        "create_interview_customer": {
            "properties": {
                "interview_customer_id": {
                    "required": true,
                    "type" : "integer",
                    "example" : "44"
                }
            }
        }
    }
}